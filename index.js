// Include packages needed for this application
const inquirer = require('inquirer');
const fs = require('fs');
const util = require('util');

const writeFileAsync = util.promisify(fs.writeFile);
// Create an array of questions for user input
let questions = ["What's it called?", "Describe what it does, please.", "How do you use it?", "How do you install it", "What are your contribution guidelines?", "Any test instructions?", "licence preference?", "WHat year is it?", "Whats the name of the contributor taking responsibility for the licence", "Please type your Github username.",  "lastly, your email" ];


 const promptUser = () =>inquirer.prompt([
    {type: "input",
    name: "title",
    message: questions[0],
    
  },
  {type: "input",
    name: "description",
    message: questions[1],
    
  },
  {type: "input",
  name: "install",
  message: questions[3],
  
  },  
  {type: "input",
  name: "usage",
  message: questions[2],
  
  },
  {type: "input",
  name: "contributions",
  message: questions[4],
  
  },  
  {type: "input",
    name: "test",
    message: questions[5],
    
  },
  {type: "list",
    name: "license",
    message: questions[6],
    choices: ['Apache', 'Boost', 'BSD3']
  },
  {type: "input",
    name: "year",
    message: questions[7],
    
  },
  {type: "input",
    name: "licensee",
    message: questions[8],
    
  },
  {type: "input",
    name: "github",
    message: questions[9],
  },
  {type: "input",
    name: "email",
    message: questions[10],
  },
])
 let badge = ""
 let license = ""
 
 const readMeMaker = (answers) => 
`${badge} 
# ${answers.title}
## Description
${answers.description}
## Table of Contents
- #### [Description](##-description)
- #### [Installation](##-Installation)
- #### [Usage Information](##-usage-information)
- #### [License](##-license)
- #### [Contributing](##-contributing)
- #### [Tests](##-tests)
- #### [Questions](##-questions)



## Installation
${answers.install}
## Usage Information
${answers.usage}
## License
${license}
## Contributing
${answers.contributions}
## Tests 
${answers.test}
## Questions
If you have any questions regarding this project please feel free to reach out at 

-Email: ${answers.email} 
-GitHub Username: ${answers.github} `

  
 
 
 let apacheBadge = "[![License](https://img.shields.io/badge/License-Apache%202.0-blue.svg)](https://opensource.org/licenses/Apache-2.0)"
 
 let boostBadge = "[![License](https://img.shields.io/badge/License-Boost%201.0-lightblue.svg)](https://www.boost.org/LICENSE_1_0.txt)"
 
 let bsd3Badge = "[![License](https://img.shields.io/badge/License-BSD%203--Clause-blue.svg)](https://opensource.org/licenses/BSD-3-Clause)"
 let apcacheLicense =  (answers) => `Copyright  ${answers.year}  ${answers.licensee}
 
 Licensed under the Apache License, Version 2.0 (the "License");
 you may not use this file except in compliance with the License.
 You may obtain a copy of the License at
 
 http://www.apache.org/licenses/LICENSE-2.0
 
 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.`

 
 
 let boostLicense = `Boost Software License - Version 1.0 - August 17th, 2003
 
 Permission is hereby granted, free of charge, to any person or organization
 obtaining a copy of the software and accompanying documentation covered by
 this license (the "Software") to use, reproduce, display, distribute,
 execute, and transmit the Software, and to prepare derivative works of the
 Software, and to permit third-parties to whom the Software is furnished to
 do so, all subject to the following:
 
 The copyright notices in the Software and this entire statement, including
 the above license grant, this restriction and the following disclaimer,
 must be included in all copies of the Software, in whole or in part, and
 all derivative works of the Software, unless such copies or derivative
 works are solely in the form of machine-executable object code generated by
 a source language processor.
 
 THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
 SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
 FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
 ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 DEALINGS IN THE SOFTWARE.`
 
 
 let bsd3License = (answers) => `Copyright ${answers.year} ${answers.licensee}
 
 Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:
 
 1. Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.
 
 2. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.
 
 3. Neither the name of the copyright holder nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission.
 
 THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE`
 
// TODO: Create a function to write README file
let writeToFile = function() { 
  promptUser()
    .then((answers) => {
      if( answers.license = "Apache"){
        badge = apacheBadge
        license = apcacheLicense(answers)
      }
      else if( answers.license = "Boost"){
        badge = boostBadge
        license = boostLicense
        
      }
      else {
        badge = bsd3Badge
        license = bsd3License(answers)
      }
      writeFileAsync('./dist/README.md', readMeMaker(answers))
          
            
    })
    .then(() => console.log('Successfully wrote to the dist folder!'))
    .catch((err) => console.error(err)); 


  


}

// Create a function to initialize app
function init(answers) {
  
  writeToFile(answers)}

// Function call to initialize app
init();
